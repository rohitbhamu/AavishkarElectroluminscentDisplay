%!PS-Adobe-3.0 EPSF-3.0
%%Title: C:/Program Files (x86)/XCircuit/Page_3.eps
%%Creator: XCircuit v3.4 rev10
%%CreationDate: Tue May 22 22:21:37 2018
%%Pages: 1
%%BoundingBox: 68 68 796 394
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1104 720 translate

1 1.00 -736 208 -912 208 -896 208 3 polygon
1 1.00 -736 208 -640 208 2 polygon
1 1.00 -640 208 -640 0 2 polygon
1 1.00 -640 0 -912 0 2 polygon
1 1.00 -912 0 -912 208 2 polygon
1 1.00 -832 192 -896 128 -816 128 -752 192 -832 192 5 polygon
1 1.00 -720 192 -784 128 2 polygon
1 1.00 -784 128 -704 128 -640 192 -720 192 4 polygon
1 1.00 -640 128 -592 128 -512 128 -512 176 4 polygon
1 1.00 -640 64 -512 64 -512 16 3 polygon
1.00 0 -512 176 dot
1.00 0 -512 16 dot
1.00 0 32 48 dot
1.00 0 32 176 dot
1.00 0 432 192 dot
1 1.00 -512 176 -368 176 -368 208 -96 208 -96 0 -368 0 -368 16 -512 16 
8 polygon
1 1.00 -368 176 -368 16 2 polygon
1 1.00 -96 176 32 176 2 polygon
1 1.00 208 160 208 0 448 0 448 160 544 256 544 112 448 0 7 polygon
1 1.00 208 160 304 256 544 256 3 polygon
1 1.00 208 160 448 160 2 polygon
1 1.00 256 160 256 192 272 192 272 160 4 polygon
1 1.00 416 160 416 192 432 192 432 160 4 polygon
1 1.00 304 192 304 160 2 polygon
1 1.00 288 176 320 176 2 polygon
1 1.00 368 176 400 176 2 polygon
1 1.00 32 176 32 240 256 240 256 192 4 polygon
1 1.00 -96 48 352 48 352 208 416 208 416 192 5 polygon
1 1.00 272 192 272 288 784 288 784 208 4 polygon
1 1.00 432 192 432 320 928 320 944 320 944 208 5 polygon
1 1.00 800 0 800 -96 416 -96 112 -96 4 polygon
1 1.00 928 0 928 -224 2 polygon
1 1.00 928 -224 112 -224 2 polygon
1 1.00 -256 -48 -416 -240 -80 -240 96 -48 -256 -48 5 polygon
1 1.00 112 -96 112 -160 112 -208 64 -208 4 polygon
1 1.00 112 -224 64 -224 2 polygon
1 1.00 32 -192 64 -192 64 -240 16 -240 16 -192 32 -192 6 polygon
1 1.00 -16 -240 16 -224 2 polygon
1 1.00 -16 -224 16 -208 2 polygon
1 1.00 -176 -240 -176 -224 -16 -224 3 polygon
1 1.00 -16 -240 -80 -240 2 polygon
1 1.00 -16 -224 -16 -240 2 polygon
1 1.00 800 -96 800 -112 2 polygon
1 1.00 800 -128 800 -144 2 polygon
1 1.00 800 -160 800 -176 2 polygon
1 1.00 800 -192 800 -208 2 polygon
1 1.00 800 -224 800 -240 2 polygon
1 1.00 800 -256 800 -272 2 polygon
1 1.00 800 -288 800 -304 2 polygon
1 1.00 928 -224 928 -240 2 polygon
1 1.00 928 -256 928 -272 2 polygon
1 1.00 928 -288 928 -304 2 polygon
1 1.00 336 -320 592 -320 592 -528 336 -528 336 -320 5 polygon
1 1.00 800 -320 800 -336 2 polygon
1 1.00 928 -320 928 -336 2 polygon
1 1.00 592 -368 800 -368 800 -352 3 polygon
1 1.00 928 -352 928 -480 592 -480 3 polygon
1 1.00 336 -368 224 -368 224 -336 3 polygon
1 1.00 336 -480 192 -480 192 -320 3 polygon
1 1.00 224 -320 224 -336 2 polygon
1 1.00 224 -288 224 -304 2 polygon
1 1.00 224 -256 224 -272 2 polygon
1 1.00 224 -224 224 -240 2 polygon
1 1.00 224 -208 224 -192 2 polygon
1 1.00 224 -160 224 -176 2 polygon
1 1.00 224 -128 224 -144 2 polygon
1 1.00 224 -96 224 -112 2 polygon
1 1.00 192 -224 192 -240 2 polygon
1 1.00 192 -256 192 -272 2 polygon
1 1.00 192 -288 192 -304 2 polygon
1 1.00 704 208 1008 208 1008 0 704 0 704 208 5 polygon
(+) {/Helvetica cf} 2 16 0 1.00 752 224 label
(-) {/Helvetica cf} 2 16 0 1.00 912 224 label
(+) {/Helvetica cf} 2 16 0 1.00 -400 144 label
(-) {/Helvetica cf} 2 16 0 1.00 -400 32 label
(+) {/Helvetica cf} 2 16 0 1.00 -80 144 label
(-) {/Helvetica cf} 2 16 0 1.00 -80 64 label
1.00 0 272 192 dot
1.00 0 256 192 dot
1.00 0 416 192 dot
(solar panel) {/Helvetica cf} 2 16 0 1.00 -896 96 label
(12 v input) {/Helvetica cf} 2 16 0 1.00 -896 48 label
(solar charge) {/Helvetica cf} 2 16 0 1.00 -336 160 label
(controller) {/Helvetica cf} 2 16 0 1.00 -336 96 label
(12 v LIPO) {/Helvetica cf} 2 16 0 1.00 224 16 label
(\(12 v\)) {/Helvetica cf} 2 16 0 1.00 -336 64 label
(invertor) {/Helvetica cf} 2 16 0 1.00 752 160 label
(circuit) {/Helvetica cf} 2 16 0 1.00 752 128 label
(\(12 v DC to ) {/Helvetica cf} 2 16 0 1.00 752 80 label
(220 v AC\)) {/Helvetica cf} 2 16 0 1.00 768 32 label
(EL Display) {/Helvetica cf} 2 16 0 1.00 -240 -128 label
(cyclo) {/Helvetica cf} 2 16 0 1.00 384 -352 label
(convertor) {/Helvetica cf} 2 16 0 1.00 352 -384 label
(\(50 Hz to ) {/Helvetica cf} 2 16 0 1.00 368 -416 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
